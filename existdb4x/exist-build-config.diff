diff --git a/conf.xml.tmpl bunnecessarympl
index 3677fcc0a..b110e9828 100644
--- a/conf.xml.tmpl
+++ b/conf.xml.tmpl
@@ -905,9 +905,9 @@
             <module uri="http://exist-db.org/xquery/cssparser"          class="org.exist.xquery.modules.cssparser.CSSParserModule"/>
             <module uri="http://exist-db.org/xquery/backups"            class="org.exist.backup.xquery.BackupModule" />
             <module uri="http://exist-db.org/xquery/cache"              class="org.exist.xquery.modules.cache.CacheModule" />
-            <module uri="http://exist-db.org/xquery/context"            class="org.exist.xquery.modules.context.ContextModule" />
+            <module uri="http://exist-db.org/xquery/context"            class="org.exist.xquery.modules.context.ContextModule" / -->
             <module uri="http://exist-db.org/xquery/cqlparser"          class="org.exist.xquery.modules.cqlparser.CQLParserModule" />
-            <module uri="http://exist-db.org/xquery/exi"                class="org.exist.xquery.modules.exi.ExiModule" />
+            <!-- module uri="http://exist-db.org/xquery/exi"                class="org.exist.xquery.modules.exi.ExiModule" />
             <module uri="http://exist-db.org/xquery/jndi"               class="org.exist.xquery.modules.jndi.JNDIModule" />
             <module uri="http://exist-db.org/xquery/jfreechart"         class="org.exist.xquery.modules.jfreechart.JFreeChartModule" />
             <module uri="http://exist-db.org/xquery/memcached"          class="org.exist.xquery.modules.memcached.MemcachedModule" />
diff --git a/extensions/build.properties b/extensions/build.properties
index 5a2073d..a03d63f 100644
--- a/extensions/build.properties
+++ b/extensions/build.properties
@@ -94,8 +94,8 @@ include.module.context = false
 include.module.counter = true
 
 # Contextual Query Parser (CQL) module
-include.module.cqlparser = false
-include.module.cqlparser.url = http://maven.indexdata.com/org/z3950/zing/cql-java/1.10/cql-java-1.10.jar
+include.module.cqlparser = true
+include.module.cqlparser.url = http://maven.indexdata.com/org/z3950/zing/cql-java/1.13/cql-java-1.13.jar
 
 # Date/DateTime/Time utility functions module
 include.module.datetime = true
diff --git a/extensions/modules/build.xml b/extensions/modules/build.xml
index c255ebb..ab702f1 100644
--- a/extensions/modules/build.xml
+++ b/extensions/modules/build.xml
@@ -171,7 +171,7 @@
     <!-- 
         Special targets for cqlparser module 
     -->
-    <target name="prepare-cqlparser" if="${include.module.cqlparser}">
+    <target name="prepare-cqlparser" if="true">
         <echo message="------------------------------------------------------"/>
         <echo message="Downloading libraries required by the cqlparser module"/>
         <echo message="------------------------------------------------------"/>
@@ -222,7 +222,7 @@
             <exclude name="org/exist/xquery/modules/compression/**" unless="${include.module.compression}"/>
             <exclude name="org/exist/xquery/modules/context/**" unless="${include.module.context}"/>
             <exclude name="org/exist/xquery/modules/counter/**" unless="${include.module.counter}"/>
-            <exclude name="org/exist/xquery/modules/cqlparser/**" unless="${include.module.cqlparser}"/>
+            <exclude name="org/exist/xquery/modules/cqlparser/**" unless="true"/>
             <exclude name="org/exist/xquery/modules/datetime/**" unless="${include.module.datetime}"/>
             <exclude name="org/exist/xquery/modules/example/**" unless="${include.module.example}"/>
             <exclude name="org/exist/xquery/modules/file/**" unless="${include.module.file}"/>
diff --git a/log4j2.xml b/log4j2.xml
index 5238d11..8e0d45b 100644
--- a/log4j2.xml
+++ b/log4j2.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
     <Properties>
-        <Property name="logs">${log4j:configParentLocation}/webapp/WEB-INF/logs</Property>
+        <Property name="logs">$${env:EXIST_HOME}/webapp/WEB-INF/logs</Property>
         <Property name="rollover.max.size">10MB</Property>
         <Property name="rollover.max">14</Property>
         <Property name="rollover.file.pattern">%d{yyyyMMddHHmmss}</Property>
diff --git a/webapp/WEB-INF/web.xml.tmpl b/webapp/WEB-INF/web.xml.tmpl
index 898ead5..06b9951 100644
--- a/webapp/WEB-INF/web.xml.tmpl
+++ b/webapp/WEB-INF/web.xml.tmpl
@@ -97,7 +97,7 @@
 		-->
         <init-param>
             <param-name>hidden</param-name>
-            <param-value>false</param-value>
+            <param-value>true</param-value>
         </init-param>
 
         <load-on-startup>2</load-on-startup>
diff --git a/extensions/security/ldap/src/org/exist/security/realm/ldap/LDAPRealm.java b/extensions/security/ldap/src/org/exist/security/realm/ldap/LDAPRealm.java
index 71b13e4fc..a78d1bb9c 100644
--- a/extensions/security/ldap/src/org/exist/security/realm/ldap/LDAPRealm.java
+++ b/extensions/security/ldap/src/org/exist/security/realm/ldap/LDAPRealm.java
@@ -218,7 +218,8 @@ public class LDAPRealm extends AbstractRealm {
         
         try {
             final LdapContext ctx = getContext(invokingUser);
-            final SearchResult ldapUser = findAccountByAccountName(ctx, account.getName());
+            try {
+                final SearchResult ldapUser = findAccountByAccountName(ctx, account.getName());
             if(ldapUser == null) {
                 throw new AuthenticationException(AuthenticationException.ACCOUNT_NOT_FOUND, "Could not find the account in the LDAP");
             }
@@ -323,6 +324,11 @@ public class LDAPRealm extends AbstractRealm {
                     return account;
                 }
             });
+            } finally {
+                if(ctx != null) {
+                    LdapUtils.closeContext(ctx);
+                }
+            }
         } catch(final NamingException ne) {
             throw new AuthenticationException(AuthenticationException.UNNOWN_EXCEPTION, ne.getMessage(), ne);
         } catch(final EXistException ee) {
@@ -514,10 +520,6 @@ public class LDAPRealm extends AbstractRealm {
             	LOG.debug(ne.getMessage(), ne);
             	//LOG.error(new AuthenticationException(AuthenticationException.UNNOWN_EXCEPTION, ne.getMessage()));
                 return null;
-            } finally {
-                if(ctx != null){
-                    LdapUtils.closeContext(ctx);
-                }
             }
         }
     }
@@ -642,10 +644,6 @@ public class LDAPRealm extends AbstractRealm {
             } catch(final NamingException ne) {
                 LOG.error(new AuthenticationException(AuthenticationException.UNNOWN_EXCEPTION, ne.getMessage()));
                 return null;
-            } finally {
-                if(ctx != null) {
-                    LdapUtils.closeContext(ctx);
-                }
             }
         }
     }
@@ -848,7 +846,7 @@ public class LDAPRealm extends AbstractRealm {
         }
 
         public String getValue() {
-            return value;
+            return value.replace("\\", "\\5c").replace("(", "\\28").replace(")", "\\29");
         }
     }
     
@@ -1047,12 +1045,7 @@ public class LDAPRealm extends AbstractRealm {
             }
         } catch(final NamingException ne) {
             LOG.error(new AuthenticationException(AuthenticationException.UNNOWN_EXCEPTION, ne.getMessage()));
-        } finally {
-            if(ctx != null) {
-                LdapUtils.closeContext(ctx);
-            }
         }
-
         return groupnames;
     }
     
